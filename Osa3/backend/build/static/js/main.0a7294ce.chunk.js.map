{"version":3,"sources":["components/services/numbers.js","components/numbers.js","components/add.js","components/filter.js","components/notification.js","components/app.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","deleUrl","delete","Numbers","namesToShow","setErrorMessage","persons","setErrorType","map","person","key","name","number","type","onClick","personname","result","window","confirm","undefined","numberService","setTimeout","deleteNumb","Add","setPersons","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","some","el","preventDefault","find","changedPerson","returnedNumber","catch","error","filter","p","returnedPerson","concat","value","onChange","target","Filter","newFilter","setNewFilter","setShowAll","Notification","message","errorType","className","App","errorMessage","useEffect","initialPersons","showAll","toLowerCase","includes","toLocaleLowerCase","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a7294ce.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://ollipuhelinluettelo.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst dele = (id) => {\r\n    const deleUrl = baseUrl + \"/\" + id\r\n    axios.delete(deleUrl)\r\n}\r\nexport default { getAll, create, update, dele }","import React from 'react'\r\nimport numberService from './services/numbers'\r\n\r\nconst Numbers = ({namesToShow, persons, setErrorMessage, setErrorType}) => {\r\n\r\n  const deleteNumb = (personname, id) => {\r\n    const result = window.confirm(\"Do you really want to delete \" + personname + \"'s this number?\")\r\n\r\n    if(id !== undefined && result === true){\r\n      numberService\r\n      .dele(id)\r\n      setErrorType(false)\r\n      setErrorMessage(personname + \" was deleted succesfully!\")\r\n      setTimeout(() => {\r\n      setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n    const rows = () => namesToShow.map(person =>\r\n      <p key={person.name}>\r\n        {person.name}{' '}{person.number} <button type=\"button\" onClick={() => deleteNumb(person.name, person.id, persons)}>Delete</button>\r\n      </p>\r\n  )\r\n  \r\n    return(\r\n      <div>\r\n        {rows()}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Numbers","import React, { useState } from 'react'\r\nimport numberService from './services/numbers'\r\n\r\nconst Add = ({persons, setPersons, setErrorMessage, setErrorType}) => {\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber] = useState('')\r\n  \r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n    const handleNumberChange = (event) => {\r\n      setNewNumber(event.target.value)\r\n    }\r\n  \r\n    const addName = (event) => {\r\n      const found = persons.some(el => el.name === newName)\r\n\r\n      if(found){\r\n        event.preventDefault()\r\n        const id = persons.find(person => person.name === newName).id\r\n        const person = persons[id-1]\r\n        const changedPerson = { ...person, number: newNumber }\r\n        const result = window.confirm(newName + ' is already added to phonebook. Do you want to replace it?')\r\n        if(result === true){\r\n          numberService\r\n          .update(id, changedPerson)\r\n          .then(returnedNumber => {\r\n          setPersons(persons.map(person => person.id !== id ? person : returnedNumber))\r\n          setErrorType(false)\r\n          setErrorMessage(newName + \" was changed succesfully!\")\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setErrorType(true)\r\n            setErrorMessage(newName + ' was already deleted from the server')\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 5000)\r\n            setPersons(persons.filter(p => p.id !== id))\r\n          })\r\n        }\r\n      }else{\r\n        event.preventDefault()\r\n        const nameObject = {\r\n          name: newName,\r\n          number: newNumber,\r\n        }\r\n        numberService\r\n          .create(nameObject)\r\n          .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setErrorType(false)\r\n          setErrorMessage(newName + \" was added succesfully!\")\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n          setNewName('')\r\n          setNewNumber('')\r\n          })\r\n      }\r\n    }\r\n  \r\n    return(\r\n      <div>\r\n      <form onSubmit={addName}>\r\n        <div> name: <input value={newName} onChange={handleNameChange} /> </div>\r\n        <div> number: <input value={newNumber} onChange={handleNumberChange} /> </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  /*          .catch(error => {\r\n            setErrorMessage(newName + ' was already deleted from the server')\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 5000)\r\n            setPersons(persons.filter(p => p.id !== id))\r\n          })*/\r\n\r\nexport default Add","import React from 'react'\r\n\r\nconst Filter = ({newFilter, setNewFilter, setShowAll}) => {\r\n\r\n    const handleFilterChange = (event) => {\r\n      setNewFilter(event.target.value)\r\n      setShowAll(false)\r\n    }\r\n    \r\n        return(\r\n            <div>\r\n              Filter shown with: <input value={newFilter} onChange={handleFilterChange} />\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Filter","    \r\nimport React from 'react'\r\n\r\nconst Notification = ({ message, errorType }) => {\r\n  if (message === null || message === '' ) {\r\n    return null\r\n  }else if(errorType===true){\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }else{\r\n    return (\r\n      <div className=\"message\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Numbers from './numbers'\r\nimport Add from './add'\r\nimport Filter from './filter'\r\nimport numberService from './services/numbers'\r\nimport Notification from './notification'\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [errorType, setErrorType] = useState(true)\r\n\r\n  useEffect(() => {\r\n    numberService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n      setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n  \r\n  const [ newFilter, setNewFilter] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const namesToShow = showAll\r\n  ? persons\r\n  : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLocaleLowerCase()))\r\n  \r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} errorType={errorType}/>\r\n      <h2>Phonebook</h2>\r\n      <Filter newFilter={newFilter} setNewFilter={setNewFilter} setShowAll={setShowAll} />\r\n      <h2>Add a new</h2>\r\n      <Add persons={persons} setPersons={setPersons} errorMessage={errorMessage} setErrorMessage={setErrorMessage} setErrorType={setErrorType} />\r\n      <h2>Numbers</h2>\r\n      <Numbers namesToShow={namesToShow} persons={persons} setPersons={setPersons} errorMessage={errorMessage} setErrorMessage={setErrorMessage} setErrorType={setErrorType} />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}